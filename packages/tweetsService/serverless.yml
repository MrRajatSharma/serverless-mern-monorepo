service:
  name: tweets-service

provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-1
  stage: ${opt:stage}
  environment:
    NODE_ENV: ${env:NODE_ENV, "development"}
    stage: ${env:stage, "dev"}
    SERVERLESS_STAGE: ${self:provider.stage}

plugins:
  - serverless-offline
  - serverless-webpack
  - serverless-dotenv-plugin
  - serverless-dynamodb-local

functions:
  tweets:
    handler: src/index.handler
    events:
      - http:
          path: "{proxy+}"
          method: any
          cors: true

custom:
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      # sharedDb: true
      # dbPath: dbdump/
      migrate: true
      seed: true
      noStart: true
    seed:
      domain:
        sources:
          - table: Tweets
            sources: [seed-data/Tweets.json]
  webpack:
    webpackConfig: ./config/webpack.config.js
    includeModules: true
  serverless-offline:
    port: ${env:APOLLO_SERVER_PORT}

resources:
  Resources:
    TweetsTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 10
        TableName: 'Tweets'
        
    